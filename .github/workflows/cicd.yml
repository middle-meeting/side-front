name: Build and Deploy Frontend to GCP VM

on:
  push:
    branches: [ "main" ]

env:
  IMAGE_NAME: frontend
  IMAGE_TAG: latest
  REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Login to GitHub Container Registry
      run: echo "${{ secrets.GIT_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Generate .env file
      run: |
        echo "NEXT_PUBLIC_API_URL=${{ secrets.FRONT_ENV_NEXT_PUBLIC_API_URL }}" >> .env
        echo "NEXT_PUBLIC_CLIENT_ID=${{ secrets.FRONT_ENV_NEXT_PUBLIC_CLIENT_ID }}" >> .env

    - name: Build Docker image
      run: docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

    - name: Push Docker image
      run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

    - name: Deploy to Frontend VM via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.VM_SSH_KEY }}
        passphrase: ${{ secrets.VM_SSH_PASSPHRASE }}
        script: |
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GIT_TOKEN }}
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          docker stop ${{ env.IMAGE_NAME }} || true
          docker rm ${{ env.IMAGE_NAME }} || true
          docker run -d --name ${{ env.IMAGE_NAME }} \
            -p 3000:3000 \
            -e NEXT_PUBLIC_API_URL=${{ secrets.FRONT_ENV_NEXT_PUBLIC_API_URL }} \
            -e NEXT_PUBLIC_CLIENT_ID=${{ secrets.FRONT_ENV_NEXT_PUBLIC_CLIENT_ID }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
